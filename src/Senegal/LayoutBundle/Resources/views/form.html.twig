{% block button_widget %}
{% spaceless %}
    {% if label is empty %}
        {% set label = name|humanize %}
    {% endif %}
    <button type="{{ type|default('button') }}" id="{{ id }}" name="{{ full_name }}" {% if disabled %} disabled="disabled"{% endif %}
    {% for attrname, attrvalue in attr %}{{ attrname }}="{{ attrvalue }}" {% endfor %}
>{{ label|trans({}, translation_domain) }}</button>
{% endspaceless %}
{% endblock button_widget %}

{# Add a class to the widget row
   We need the default form_row block &s well as button_row
#}
{% block form_row %}
{% spaceless %}
    <div class="form-row row-{{ full_name }}">
        {{ form_label(form) }}
        {{ form_errors(form) }}
        {{ form_widget(form) }}
    </div>
{% endspaceless %}
{% endblock form_row %}

{% block button_row %}
{% spaceless %}
    <div class="form-row row-button row-{{ full_name }}">
        {{ form_widget(form) }}
    </div>
{% endspaceless %}
{% endblock button_row %}

{#
    Rewrite the Label Output
    YES, we want to be able to add some HTML in the labels... No only Strings !!
    Like for instance... some inline content in a span for styling purpose

    http://stackoverflow.com/questions/10209345/twig-and-autoescaping
#}
{% block form_label %}
{% spaceless %}
    {% if label is not sameas(false) %}
        {% if not compound %}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {% endif %}
        {% if required %}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %}
        {% if label is empty %}
            {% set label = name|humanize %}
        {% endif %}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>{% autoescape false %}{{ label|trans({}, translation_domain) }}{% endautoescape %}</label>
    {% endif %}
{% endspaceless %}
{% endblock form_label %}

{# Add a class to the form UL container in for a form error row  #}
{% block form_errors %}
{% spaceless %}
    {% if errors|length > 0 %}
        <ul class="form-errors-list">
            {% for error in errors %}
                <li>{{ error.message }}</li>
            {% endfor %}
        </ul>
    {% endif %}
{% endspaceless %}
{% endblock form_errors %}

{# Use for choice list in revision field data form, iorder to hide NA value #}
{% block choice_widget_options %}
    {% spaceless %}
        {% for group_label, choice in options %}
            {% if choice is iterable %}
                <optgroup label="{{ group_label|trans({}, translation_domain) }}">
                    {% set options = choice %}
                    {{ block('choice_widget_options') }}
                </optgroup>
            {% else %}
                {% if constant('Pfd\\Sdk\\Model\\Field::VALUE_NA') != choice.value %}
                  <option value="{{ choice.value }}"{% if choice is selectedchoice(value) %} selected="selected"{% endif %}>{{ choice.label|trans({}, translation_domain) }}</option>
                {% endif %}
            {% endif %}
        {% endfor %}
    {% endspaceless %}
{% endblock choice_widget_options %}

{% block choice_widget_expanded %}
    {% spaceless %}
        <div {{ block('widget_container_attributes') }}>
            {% for child in form %}
                <div class="form-row clearfix">
                    <span class="checkbox-inline">{{ form_widget(child) }}</span>
                    <span class="checkbox-inline checkbox">{{ form_label(child) }}</span>
                </div>
            {% endfor %}
        </div>
    {% endspaceless %}
{% endblock choice_widget_expanded %}

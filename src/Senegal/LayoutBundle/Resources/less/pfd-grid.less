//
// Grid system
// Custom Profideo Grid
// --------------------------------------------------

//  We want a responsive theme but we dont want collapsing columns and we want the application to maintain
//  it's look & feel, it's design without breakpoints.
//  We also want a very easy namming
//  We add a grid definition based on the cols-xs* ( exact copy)
//  Push + Pull + Offest => https://github.com/bassjobsen/non-responsive-tb3

//
// keep default mixins & communs items from TBS grid.less
// -------------------------

// Set the container width, and override it for fixed navbars in media queries
.container {
  .container-fixed();
}

// mobile first defaults
.row {
  .make-row();
}


//
// Profideo Grid
// -------------------------

// Common styles for small and large grid columns
.col-1,
.col-2,
.col-3,
.col-4,
.col-5,
.col-6,
.col-7,
.col-8,
.col-9,
.col-10,
.col-11,
.col-12
{
  position: relative;
  // Prevent columns from collapsing when empty
  min-height: 1px;
  // Inner gutter via padding
  padding-left:  (@grid-gutter-width / 2);
  padding-right: (@grid-gutter-width / 2);
}

.col-1,
.col-2,
.col-3,
.col-4,
.col-5,
.col-6,
.col-7,
.col-8,
.col-9,
.col-10,
.col-11 {
  float: left;
}

.col-1  { width: percentage((1 / @grid-columns)); }
.col-2  { width: percentage((2 / @grid-columns)); }
.col-3  { width: percentage((3 / @grid-columns)); }
.col-4  { width: percentage((4 / @grid-columns)); }
.col-5  { width: percentage((5 / @grid-columns)); }
.col-6  { width: percentage((6 / @grid-columns)); }
.col-7  { width: percentage((7 / @grid-columns)); }
.col-8  { width: percentage((8 / @grid-columns)); }
.col-9  { width: percentage((9 / @grid-columns)); }
.col-10 { width: percentage((10/ @grid-columns)); }
.col-11 { width: percentage((11/ @grid-columns)); }
.col-12 { width: 100%; }


// Push and pull columns for source order changes
.col-push-0  { left: auto; }
.col-push-1  { left: percentage((1 / @grid-columns)); }
.col-push-2  { left: percentage((2 / @grid-columns)); }
.col-push-3  { left: percentage((3 / @grid-columns)); }
.col-push-4  { left: percentage((4 / @grid-columns)); }
.col-push-5  { left: percentage((5 / @grid-columns)); }
.col-push-6  { left: percentage((6 / @grid-columns)); }
.col-push-7  { left: percentage((7 / @grid-columns)); }
.col-push-8  { left: percentage((8 / @grid-columns)); }
.col-push-9  { left: percentage((9 / @grid-columns)); }
.col-push-10 { left: percentage((10/ @grid-columns)); }
.col-push-11 { left: percentage((11/ @grid-columns)); }

.col-pull-0  { right: auto; }
.col-pull-1  { right: percentage((1 / @grid-columns)); }
.col-pull-2  { right: percentage((2 / @grid-columns)); }
.col-pull-3  { right: percentage((3 / @grid-columns)); }
.col-pull-4  { right: percentage((4 / @grid-columns)); }
.col-pull-5  { right: percentage((5 / @grid-columns)); }
.col-pull-6  { right: percentage((6 / @grid-columns)); }
.col-pull-7  { right: percentage((7 / @grid-columns)); }
.col-pull-8  { right: percentage((8 / @grid-columns)); }
.col-pull-9  { right: percentage((9 / @grid-columns)); }
.col-pull-10 { right: percentage((10/ @grid-columns)); }
.col-pull-11 { right: percentage((11/ @grid-columns)); }

// Offsets
.col-offset-0  { margin-left: 0; }
.col-offset-1  { margin-left: percentage((1 / @grid-columns)); }
.col-offset-2  { margin-left: percentage((2 / @grid-columns)); }
.col-offset-3  { margin-left: percentage((3 / @grid-columns)); }
.col-offset-4  { margin-left: percentage((4 / @grid-columns)); }
.col-offset-5  { margin-left: percentage((5 / @grid-columns)); }
.col-offset-6  { margin-left: percentage((6 / @grid-columns)); }
.col-offset-7  { margin-left: percentage((7 / @grid-columns)); }
.col-offset-8  { margin-left: percentage((8 / @grid-columns)); }
.col-offset-9  { margin-left: percentage((9 / @grid-columns)); }
.col-offset-10 { margin-left: percentage((10/ @grid-columns)); }
.col-offset-11 { margin-left: percentage((11/ @grid-columns)); }
